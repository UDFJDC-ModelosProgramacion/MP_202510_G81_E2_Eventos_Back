{
	"info": {
		"_postman_id": "262be988-0a8c-48e1-b95b-43d6c398a931",
		"name": "Event Management API",
		"description": "API para gestión de eventos, asistentes, organizadores y preferencias",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45609550",
		"_collection_link": "https://lucho-4700206.postman.co/workspace/Lucho's-Workspace~30bd8fa5-3809-48d6-892d-0fc456a81174/collection/45609550-262be988-0a8c-48e1-b95b-43d6c398a931?action=share&source=collection_link&creator=45609550"
	},
	"item": [
		{
			"name": "AssistantService",
			"item": [
				{
					"name": "Crear un nuevo asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"assistant_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Nuevo\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"nuevo@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants"
							]
						},
						"description": "Crea un nuevo registro de asistente en el sistema"
					},
					"response": [
						{
							"name": "Crear un nuevo asistente",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"name\": \"Nuevo\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"nuevo@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear un nuevo asistente 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"assistant_id_2\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Nuevo Asistente 2\",\r\n  \"lastName\": \"Asistente2\",\r\n  \"email\": \"nuevo@example2.com\",\r\n  \"password\": \"nuevapassword2\",\r\n  \"numberPhone\": \"34232677\",\r\n  \"birthDate\": \"1995-03-20\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants"
							]
						}
					},
					"response": [
						{
							"name": "Crear un nuevo asistente 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"Nuevo Asistente 2\",\r\n    \"lastName\": \"Asistente2\",\r\n    \"email\": \"nuevo@example2.com\",\r\n    \"password\": \"nuevapassword2\",\r\n    \"numberPhone\": \"34232677\",\r\n    \"birthDate\": \"1995-03-20\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener todos los asistentes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of assistants > ' + 0, function () {\r",
									"\r",
									"   var data = pm.response.json()\r",
									"\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants"
							]
						},
						"description": "Obtiene la lista completa de todos los asistentes registrados"
					},
					"response": [
						{
							"name": "Obtener todos los asistentes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un asistente por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id_1}}"
							]
						},
						"description": "Obtiene los detalles de un asistente específico por su ID"
					},
					"response": [
						{
							"name": "Obtener un asistente por ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un asistente que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The assistant with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un asistente que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Actualizar un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Juan Actualizado\",\n  \"lastName\": \"Pérez\",\n  \"email\": \"juan.actualizado@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"1234567890\",\n  \"birthDate\": \"1990-01-01\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id_1}}"
							]
						},
						"description": "Actualiza la información de un asistente existente"
					},
					"response": [
						{
							"name": "Actualizar un asistente",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"name\": \"Juan Actualizado\",\n  \"lastName\": \"Pérez\",\n  \"email\": \"juan.actualizado@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"1234567890\",\n  \"birthDate\": \"1990-01-01\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Actualizar un asistente que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The assistant with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Juan Actualizado No existe\",\r\n  \"lastName\": \"Pérez\",\r\n  \"email\": \"juan.actualizado@example.com\",\r\n  \"password\": \"nuevapassword\",\r\n  \"numberPhone\": \"1234567890\",\r\n  \"birthDate\": \"1990-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/assistants/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar un asistente que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"timestamp\": \"21-02-2023 10:04:10\",\r\n\r\n        \"message\": \"The assistant with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"\r",
									"   pm.response.to.have.status(204);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id_1}}"
							]
						},
						"description": "Elimina permanentemente un asistente del sistema"
					},
					"response": [
						{
							"name": "Eliminar un asistente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id_1}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar un asistente 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"\r",
									"   pm.response.to.have.status(204);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un asistente 2",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id_2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar un asistente que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The assistant with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un asistente que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The assistant with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				}
			],
			"description": "Operaciones para gestionar asistentes"
		},
		{
			"name": "OrganizerService",
			"item": [
				{
					"name": "Crear un nuevo organizador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"organizer_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Nuevo\",\n  \"lastName\": \"Organizador\",\n  \"email\": \"nuevo.org@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"5559876543\",\n  \"birthDate\": \"1988-07-15\",\n  \"address\": \"Avenida_456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizers"
							]
						},
						"description": "Crea un nuevo registro de organizador en el sistema"
					},
					"response": [
						{
							"name": "Crear un nuevo organizador",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"name\": \"Nuevo\",\n  \"lastName\": \"Organizador\",\n  \"email\": \"nuevo.org@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"5559876543\",\n  \"birthDate\": \"1988-07-15\",\n  \"address\": \"Avenida_456\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear un nuevo organizador 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"organizer_id_2\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Nuevo 2\",\r\n  \"lastName\": \"Organizador 2\",\r\n  \"email\": \"nuevo.org@example2.com\",\r\n  \"password\": \"nuevapassword2\",\r\n  \"numberPhone\": \"5559543\",\r\n  \"birthDate\": \"1988-07-15\",\r\n  \"address\": \"Avenida_4562\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizers"
							]
						}
					},
					"response": [
						{
							"name": "Crear un nuevo organizador 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 2,\r\n  \"name\": \"Nuevo 2\",\r\n  \"lastName\": \"Organizador 2\",\r\n  \"email\": \"nuevo.org@example2.com\",\r\n  \"password\": \"nuevapassword2\",\r\n  \"numberPhone\": \"5559543\",\r\n  \"birthDate\": \"1988-07-15\",\r\n  \"address\": \"Avenida_4562\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener todos los organizadores",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of organizers > ' + 0, function () {\r",
									"\r",
									"   var data = pm.response.json()\r",
									"\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizers"
							]
						},
						"description": "Obtiene la lista completa de todos los organizadores registrados"
					},
					"response": [
						{
							"name": "Obtener todos los organizadores",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un organizador por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizers/{{organizer_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizers",
								"{{organizer_id_1}}"
							]
						},
						"description": "Obtiene los detalles de un organizador específico por su ID"
					},
					"response": [
						{
							"name": "Obtener un organizador por ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizers/{{organizer_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizers",
										"{{organizer_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un organizador que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The organizer with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizers/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizers",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un organizador que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizers/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizers",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Actualizar un organizador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Organizador Actualizado\",\n  \"lastName\": \"Uno\",\n  \"email\": \"org.actualizado@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": 1234567890,\n  \"birthDate\": \"1985-01-01\",\n  \"address\": \"Calle 123 Actualizada\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizers/{{organizer_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizers",
								"{{organizer_id_1}}"
							]
						},
						"description": "Actualiza la información de un organizador existente"
					},
					"response": [
						{
							"name": "Actualizar un organizador",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"name\": \"Organizador Actualizado\",\n  \"lastName\": \"Uno\",\n  \"email\": \"org.actualizado@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": 1234567890,\n  \"birthDate\": \"1985-01-01\",\n  \"address\": \"Calle 123 Actualizada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizers/{{organizer_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizers",
										"{{organizer_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Actualizar un organizador que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The organizer with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Organizador Actualizado No existe\",\r\n  \"lastName\": \"Uno\",\r\n  \"email\": \"org.actualizado@example.com\",\r\n  \"password\": \"nuevapassword\",\r\n  \"numberPhone\": \"1234567890\",\r\n  \"birthDate\": \"1985-01-01\",\r\n  \"address\": \"Calle 123 Actualizada\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizers/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizers",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar un organizador que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The organizer with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizers/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizers",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar un organizador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"\r",
									"   pm.response.to.have.status(204);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizers/{{organizer_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizers",
								"{{organizer_id_1}}"
							]
						},
						"description": "Elimina permanentemente un organizador del sistema"
					},
					"response": [
						{
							"name": "Eliminar un organizador",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizers/{{organizer_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizers",
										"{{organizer_id_1}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar un organizador 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"\r",
									"   pm.response.to.have.status(204);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizers/{{organizer_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizers",
								"{{organizer_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un organizador 2",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizers/{{organizer_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizers",
										"{{organizer_id_2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar organizador que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The organizer with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizers/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizers",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar organizador que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The organizer with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizers/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizers",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				}
			],
			"description": "Operaciones para gestionar organizadores"
		},
		{
			"name": "PreferenceService",
			"item": [
				{
					"name": "Crear una nueva preferencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"preference_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Nueva preferencia 1\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						},
						"description": "Crea un nuevo registro de preferencia en el sistema"
					},
					"response": [
						{
							"name": "Crear una nueva preferencia",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"description\": \"Nueva preferencia 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear una nueva preferencia 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"preference_id_3\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Nueva preferencia 2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						}
					},
					"response": [
						{
							"name": "Crear una nueva preferencia 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 2,\r\n    \"description\": \"Nueva preferencia 2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener todas las preferencias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of preferences > ' + 0, function () {\r",
									"\r",
									"   var data = pm.response.json()\r",
									"\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						},
						"description": "Obtiene la lista completa de todas las preferencias registradas"
					},
					"response": [
						{
							"name": "Obtener todas las preferencias",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener una preferencia por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id_1}}"
							]
						},
						"description": "Obtiene los detalles de una preferencia específica por su ID"
					},
					"response": [
						{
							"name": "Obtener una preferencia por ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener una preferencia que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The preference with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una preferencia que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preferences/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Actualizar una preferencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Preferencia actualizada\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id_1}}"
							]
						},
						"description": "Actualiza la información de una preferencia existente"
					},
					"response": [
						{
							"name": "Actualizar una preferencia",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"description\": \"Preferencia actualizada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Actualizar una preferencia que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The preference with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"Preferencia actualizada no existe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/preferences/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una preferencia que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The preference with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar una preferencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"\r",
									"   pm.response.to.have.status(204);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id_1}}"
							]
						},
						"description": "Elimina permanentemente una preferencia del sistema"
					},
					"response": [
						{
							"name": "Eliminar una preferencia",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id_1}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar una preferencia 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"\r",
									"   pm.response.to.have.status(204);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id_3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id_3}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar una preferencia 2",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id_2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar una preferencia que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The preference with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar una preferencia que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The preference with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				}
			],
			"description": "Operaciones para gestionar preferencias"
		},
		{
			"name": "AssistantPreferenceService",
			"item": [
				{
					"name": "Crear un nuevo asistente Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"assistant_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Asociacion Assistant Preference 1\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"AsociacionAssistantPreference1@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants"
							]
						},
						"description": "Crea un nuevo registro de asistente en el sistema"
					},
					"response": [
						{
							"name": "Crear un nuevo asistente Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"name\": \"Asociacion Assistant Preference 1\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"AsociacionAssistantPreference1@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear una nueva preferencia Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"preference_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Asociacion Assistant Preference 1\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						},
						"description": "Crea un nuevo registro de preferencia en el sistema"
					},
					"response": [
						{
							"name": "Crear una nueva preferencia Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"description\": \"Asociacion Assistant Preference 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear una nueva preferencia Asociacion 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"preference_id_2\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Asociacion Assistant Preference 2\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						},
						"description": "Crea un nuevo registro de preferencia en el sistema"
					},
					"response": [
						{
							"name": "Crear una nueva preferencia Asociacion 2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 2,\n  \"description\": \"Asociacion Assistant Preference 2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear una nueva preferencia Asociacion 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"preference_id_3\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Sin Asociacion Assistant Preference\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						},
						"description": "Crea un nuevo registro de preferencia en el sistema"
					},
					"response": [
						{
							"name": "Crear una nueva preferencia sin Asociacion 3",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3,\n  \"description\": \"Sin Asociacion Assistant Preference\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar una preferencia1 a un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/{{preference_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"preferences",
								"{{preference_id_1}}"
							]
						},
						"description": "Establece una relación entre un asistente y una preferencia"
					},
					"response": [
						{
							"name": "Asociar una preferencia1 a un asistente",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"description\": \"Asociacion Assistant Preference 1\",\r\n    \"assistants\": [\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"Asociacion Assistant Preference 2\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"AsociacionAssistantPreference2@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"  \r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id_1}}/preferences/{{preference_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id_1}}",
										"preferences",
										"{{preference_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar una preferencia2 a un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/{{preference_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"preferences",
								"{{preference_id_2}}"
							]
						},
						"description": "Establece una relación entre un asistente y una preferencia"
					},
					"response": [
						{
							"name": "Asociar una preferencia2 a un asistente",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"description\": \"Asociacion Assistant Preference 1\",\r\n    \"assistants\": [\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"Asociacion Assistant Preference 2\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"AsociacionAssistantPreference2@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"  \r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id_1}}/preferences/{{preference_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id_1}}",
										"preferences",
										"{{preference_id_2}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar una preferencia que no existe a un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The preference with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"preferences",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Asociar una preferencia que no existe a un asistente",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"timestamp\": \"21-02-2023 10:15:29\",\r\n\r\n        \"message\": \"The preference with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id_1}}/preferences/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id_1}}",
										"preferences",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener preferencias de un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of preferences > ' + 0, function () {\r",
									"\r",
									"   var data = pm.response.json()\r",
									"\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"preferences"
							]
						},
						"description": "Obtiene todas las preferencias asociadas a un asistente específico"
					},
					"response": [
						{
							"name": "Obtener preferencias de un asistente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"preferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener una preferencia específica de un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/{{preference_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"preferences",
								"{{preference_id_1}}"
							]
						},
						"description": "Obtiene una preferencia específica asociada a un asistente"
					},
					"response": [
						{
							"name": "Obtener una preferencia específica de un asistente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/{{preference_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"preferences",
										"{{preference_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener una preferencia especifica que no existe de un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {   \r",
									"    pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The preference with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"preferences",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una preferencia especifica que no existe de un asistente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"preferences",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener una preferencia que no esta asociada a un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"\r",
									"   pm.response.to.have.status(412);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The preference is not associated to the assistant\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/{{preference_id_3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"preferences",
								"{{preference_id_3}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una preferencia que no esta asociada a un asistente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/{{preference_id_3}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"preferences",
										"{{preference_id_3}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar una preferencia de un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"\r",
									"   pm.response.to.have.status(204);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/{{preference_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"preferences",
								"{{preference_id_2}}"
							]
						},
						"description": "Elimina la relación entre un asistente y una preferencia"
					},
					"response": [
						{
							"name": "Borrar una preferencia de un asistente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/{{preference_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"preferences",
										"{{preference_id_2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar una preferencia a un asistente que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The preference with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/0/artworks/{{artwork_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"0",
								"artworks",
								"{{artwork_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar una preferencia a un asistente que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The assistant with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/0/artworks/{{artwork_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"0",
										"artworks",
										"{{artwork_id_2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar una preferencia que no existe de un asistente",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"preferences",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Borrar una preferencia que no existe de un asistente",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The preference with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"preferences",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				}
			],
			"description": "Operaciones para gestionar asociaciones entre asistentes y preferencias"
		},
		{
			"name": "PreferenceAssistantService",
			"item": [
				{
					"name": "Crear una nueva preferencia Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"preference_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Asociacion Preference Assistant 1\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences"
							]
						},
						"description": "Crea un nuevo registro de preferencia en el sistema"
					},
					"response": [
						{
							"name": "Crear una nueva preferencia Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"description\": \"Asociacion Preference Assistant 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear un nuevo asistente Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"assistant_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Asociacion Preference Assistant 1\",\r\n  \"lastName\": \"Asistente 1\",\r\n  \"email\": \"PreferenceAssistant1@example.com\",\r\n  \"password\": \"nuevapassword\",\r\n  \"numberPhone\": \"34234565\",\r\n  \"birthDate\": \"1995-03-20\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants"
							]
						}
					},
					"response": [
						{
							"name": "Crear un nuevo asistente Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 1,\r\n  \"name\": \"Asociacion Preference Assistant 1\",\r\n  \"lastName\": \"Asistente 1\",\r\n  \"email\": \"PreferenceAssistant1@example.com\",\r\n  \"password\": \"nuevapassword\",\r\n  \"numberPhone\": \"34234565\",\r\n  \"birthDate\": \"1995-03-20\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear un nuevo asistente Asociacion 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"assistant_id_2\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Asociacion Preference Assistant 2\",\r\n  \"lastName\": \"Asistente 2\",\r\n  \"email\": \"PreferenceAssistant2@example.com\",\r\n  \"password\": \"nuevapassword\",\r\n  \"numberPhone\": \"34234565\",\r\n  \"birthDate\": \"1995-03-20\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants"
							]
						}
					},
					"response": [
						{
							"name": "Crear un nuevo asistente Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 2,\r\n   \"name\": \"Asociacion Preference Assistant 2\",\r\n  \"lastName\": \"Asistente 2\",\r\n  \"email\": \"PreferenceAssistant2@example.com\",\r\n  \"password\": \"nuevapassword\",\r\n  \"numberPhone\": \"34234565\",\r\n  \"birthDate\": \"1995-03-20\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un asistente a una preferencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/{{assistant_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id}}",
								"assistants",
								"{{assistant_id_1}}"
							]
						},
						"description": "Establece una relación entre una preferencia y un asistente"
					},
					"response": [
						{
							"name": "Agregar un asistente a una preferencia",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"Asociacion Preference Assistant 1\",\r\n    \"lastName\": \"Asistente 1\",\r\n    \"email\": \"PreferenceAssistant1@example.com\",\r\n    \"password\": \"nuevapassword\",\r\n    \"numberPhone\": \"34234565\",\r\n    \"birthDate\": \"1995-03-20\",\r\n    \"preferences\": [\r\n        {\r\n            \"id\": 2,\r\n            \"description\": \"Asociacion Preference Assistant 2\"\r\n        }\r\n    ] \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/{{assistant_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id}}",
										"assistants",
										"{{assistant_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un asistente que no existe a una preferencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The assistant with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id}}",
								"assistants",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un asistente que no existe a una preferencia",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"timestamp\": \"21-02-2023 10:15:29\",\r\n\r\n        \"message\": \"The assistant with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id}}",
										"assistants",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un asistente específico de una preferencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/{{assistant_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id}}",
								"assistants",
								"{{assistant_id_1}}"
							]
						},
						"description": "Obtiene un asistente específico asociado a una preferencia"
					},
					"response": [
						{
							"name": "Obtener un asistente específico de una preferencia",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/{{assistant_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id}}",
										"assistants",
										"{{assistant_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un asistente que no existe de una preferencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The assistant with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id}}",
								"assistants",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un asistente que no existe de una preferencia",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id}}",
										"assistants",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un asistente que no esta asociado a una preferencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"\r",
									"   pm.response.to.have.status(412);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The assistant is not associated to the preference\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/{{assistant_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id}}",
								"assistants",
								"{{assistant_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un asistente que no esta asociado a una preferencia",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/{{assistant_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id}}",
										"assistants",
										"{{assistant_id_2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener asistentes de una preferencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of assistants > ' + 0, function () {\r",
									"\r",
									"   var data = pm.response.json()\r",
									"\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id}}",
								"assistants"
							]
						},
						"description": "Obtiene todos los asistentes asociados a una preferencia específica"
					},
					"response": [
						{
							"name": "Obtener asistentes de una preferencia",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id}}",
										"assistants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un asistente de una preferencia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"\r",
									"   pm.response.to.have.status(204);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/{{assistant_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id}}",
								"assistants",
								"{{assistant_id_2}}"
							]
						},
						"description": "Elimina la relación entre una preferencia y un asistente"
					},
					"response": [
						{
							"name": "Borrar un asistente de una preferencia",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/{{assistant_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id}}",
										"assistants",
										"{{assistant_id_2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un asistente a una preferencia que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The preference with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/0/artworks/{{artwork_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"0",
								"artworks",
								"{{artwork_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar un asistente a una preferencia que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The preference with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences/0/artworks/{{artwork_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"0",
										"artworks",
										"{{artwork_id_2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un asistente que no existe de una preferencia",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preferences",
								"{{preference_id}}",
								"assistants",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Borrar un asistente que no existe de una preferencia",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The assistant with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preferences/{{preference_id}}/assistants/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preferences",
										"{{preference_id}}",
										"assistants",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				}
			],
			"description": "Operaciones para gestionar asociaciones entre preferencias y asistentes"
		},
		{
			"name": "AssistantBookingService",
			"item": [
				{
					"name": "Crear un nuevo asistente Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"assistant_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Asociacion Assistant Booking 1\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"AsociacionAssistantBooking1@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants"
							]
						},
						"description": "Crea un nuevo registro de asistente en el sistema"
					},
					"response": [
						{
							"name": "Crear un nuevo asistente Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"name\": \"Asociacion Assistant Booking 1\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"AsociacionAssistantBooking1@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear nuevo booking Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"booking_id_1\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"remainingSeats\" : 111\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": [
						{
							"name": "Crear nuevo booking Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"id\": 1,\n   \"remainingSeats\" : 111\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bookings"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear nuevo booking Asociacion 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"booking_id_2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"remainingSeats\" : 222\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": [
						{
							"name": "Crear nuevo booking Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"id\": 2,\n   \"remainingSeats\" : 222\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bookings"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear nuevo booking sin Asociacion 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"booking_id_3\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"remainingSeats\" : 333\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": [
						{
							"name": "Crear nuevo booking sin Asociacion 3",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"id\": 3,\n   \"remainingSeats\" : 333\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bookings"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un booking 1 a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"bookings",
								"{{booking_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un booking 1 a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"remainingSeats\": 111,\r\n    \"assistant\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Asociacion Assistant Booking 1\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"AsociacionAssistantBooking1@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"bookings",
										"{{booking_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un booking 2 a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"bookings",
								"{{booking_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un booking 2 a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 2,\r\n    \"remainingSeats\": 222,\r\n    \"assistant\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Asociacion Assistant Booking 1\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"AsociacionAssistantBooking1@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"bookings",
										"{{booking_id_2}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un booking que no existe a un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The booking with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"bookings",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Asociar una preferencia que no existe a un asistente",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"timestamp\": \"21-02-2023 10:15:29\",\r\n\r\n        \"message\": \"The booking with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id_1}}/bookings/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id_1}}",
										"bookings",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener bookings de un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of bookings > ' + 0, function () {\r",
									"\r",
									"   var data = pm.response.json()\r",
									"\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"bookings"
							]
						},
						"description": "Obtiene todas las preferencias asociadas a un asistente específico"
					},
					"response": [
						{
							"name": "Obtener bookings de un asistente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"bookings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un booking específica de un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"bookings",
								"{{booking_id_1}}"
							]
						},
						"description": "Obtiene una preferencia específica asociada a un asistente"
					},
					"response": [
						{
							"name": "Obtener un booking específica de un asistente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/preferences/{{preference_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"preferences",
										"{{preference_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un booking especifica que no existe de un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {   \r",
									"    pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The booking with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"bookings",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un booking especifica que no existe de un asistente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"bookings",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un booking que no esta asociada a un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"\r",
									"   pm.response.to.have.status(412);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The booking is not associated to the assistant\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"bookings",
								"{{booking_id_3}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un booking que no esta asociada a un asistente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_3}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"bookings",
										"{{booking_id_3}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un booking de un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"\r",
									"   pm.response.to.have.status(204);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"bookings",
								"{{booking_id_2}}"
							]
						},
						"description": "Elimina la relación entre un asistente y una preferencia"
					},
					"response": [
						{
							"name": "Borrar una preferencia de un asistente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"bookings",
										"{{booking_id_2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un booking a un asistente que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"   pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The assistant with the given id was not found\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/0/artworks/{{artwork_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"0",
								"artworks",
								"{{artwork_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar un booking a un asistente que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The assistant with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/0/artworks/{{artwork_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"0",
										"artworks",
										"{{artwork_id_2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un booking que no existe de un asistente",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"bookings",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Borrar una preferencia que no existe de un asistente",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"message\": \"The booking with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/booking/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"booking",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				}
			],
			"description": "Operaciones para gestionar relaciones entre asistentes y bookings"
		},
		{
			"name": "AssistantNotificationService",
			"item": [
				{
					"name": "Crear un nuevo asistente Asociacion Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"assistant_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Asociacion Assistant Notification 1\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"AsociacionAssistantNotification1@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants"
							]
						},
						"description": "Crea un nuevo registro de asistente en el sistema"
					},
					"response": [
						{
							"name": "Crear un nuevo asistente Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"name\": \"Asociacion Assistant Notification 1\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"AsociacionAssistantNotification1@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear nuevo notification Asociacion 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"notification_id_1\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\" : \"Asociacion Asistant Notification 1\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": [
						{
							"name": "Crear nuevo notification Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"description\" : \"Asociacion Asistant Notification 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear nuevo notification Asociacion 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"notification_id_2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\" : \"Asociacion Asistant Notification 2\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": [
						{
							"name": "Crear nuevo notification Asociacion 2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 2,\n  \"description\" : \"Asociacion Asistant Notification 2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear nuevo notification sin Asociacion 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"notification_id_3\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"description\" : \"Sin Asociacion Assistant Notification\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": [
						{
							"name": "Crear nuevo notification sin Asociacion 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"id\": 3,\n   \"description\" : \"Sin Asociacion Assistant Notification\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un notification 1 a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/{{notification_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"notifications",
								"{{notification_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un notification 1 a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"description\": \"Asociacion Asistant Notification 1\",\r\n    \"assistant\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Asociacion Assistant Notification 1\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"AsociacionAssistantNotification1@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/{{notification_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"notifications",
										"{{notification_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un notification 2 a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/{{notification_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"notifications",
								"{{notification_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un notification 2 a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 2,\r\n    \"description\": \"Asociacion Asistant Notification 2\",\r\n    \"assistant\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Asociacion Assistant Notification 1\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"AsociacionAssistantNotification1@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/{{notification_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"notifications",
										"{{notification_id_2}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un notification que no existe a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.apierror.message).to.eql(\"The notification with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"notifications",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un notification que no existe a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"timestamp\": \"21-02-2023 10:15:29\",\r\n\r\n        \"message\": \"The notification with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"notifications",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener notifications de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of notifications > 0', function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.length).to.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"notifications"
							]
						},
						"description": "Obtiene todas las notifications asociadas a un asistente específico"
					},
					"response": [
						{
							"name": "Obtener notifications de un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"notifications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un notification específica de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/{{notification_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"notifications",
								"{{notification_id_1}}"
							]
						},
						"description": "Obtiene una notification específica asociada a un asistente"
					},
					"response": [
						{
							"name": "Obtener un notification específica de un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/{{notification_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"notifications",
										"{{notification_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un notification específica que no existe de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.apierror.message).to.eql(\"The notification with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"notifications",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un notification específica que no existe de un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"notifications",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un notification que no esta asociada a un asistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"\r",
									"   pm.response.to.have.status(412);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"\r",
									"   var data = pm.response.json();\r",
									"\r",
									"   pm.expect(data.apierror.message).to.eql(\"The notification is not associated to the assistant\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/{{notification_id_3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"notifications",
								"{{notification_id_3}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un notification que no esta asociada a un asistente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/{{notification_id_3}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"notifications",
										"{{notification_id_3}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un notification de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/notifications/{{notification_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"notifications",
								"{{notification_id_2}}"
							]
						},
						"description": "Elimina la relación entre un asistente y una notification"
					},
					"response": []
				},
				{
					"name": "Borrar un notification a un assistant que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.apierror.message).to.eql(\"The assistant with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/0/notifications/{{notification_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"0",
								"notifications",
								"{{notification_id_2}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Operaciones para gestionar operaciones entre asistentes y notificaciones"
		},
		{
			"name": "AssistantPurchaseService",
			"item": [
				{
					"name": "Crear un nuevo asistente Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"assistant_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Asociacion assistant purchase 1\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"Asociacionassistantpurchase1@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants"
							]
						},
						"description": "Crea un nuevo registro de asistente en el sistema"
					},
					"response": [
						{
							"name": "Crear un nuevo asistente Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"id\": 1,\n  \"name\": \"Asociacion assistant purchase 1\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"Asociacionassistantpurchase1@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants"
									]
								}
							},
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear nuevo purchase Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"purchase_id_1\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"remainingSeats\" : 111,\n   \"amount\" : 100.0,\n   \"purchaseDate\" : \"2025-06-10T18:40:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/purchases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"purchases"
							]
						},
						"description": "Crea un nuevo purchase para vincular a un assistant"
					},
					"response": [
						{
							"name": "Crear nuevo purchase Asociacion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n   \"remainingSeats\" : 111,\n   \"amount\" : 100.0,\n   \"purchaseDate\" : \"2025-06-10T18:40:00\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/purchases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"purchases"
									]
								}
							},
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear nuevo purchase Asociacion 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"purchase_id_2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"remainingSeats\" : 222,\n   \"amount\" : 150.0,\n   \"purchaseDate\" : \"2025-06-10T18:45:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/purchases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"purchases"
							]
						}
					},
					"response": [
						{
							"name": "Crear nuevo purchase Asociacion 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 2,\n   \"remainingSeats\" : 222,\n   \"amount\" : 150.0,\n   \"purchaseDate\" : \"2025-06-10T18:45:00\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/purchases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"purchases"
									]
								}
							},
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Crear nuevo purchase sin Asociacion 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"purchase_id_3\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"remainingSeats\" : 333,\n   \"amount\" : 200.0,\n   \"purchaseDate\" : \"2025-06-10T18:50:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/purchases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"purchases"
							]
						}
					},
					"response": [
						{
							"name": "Crear nuevo purchase sin Asociacion 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"id\": 3,\n   \"remainingSeats\" : 333,\n   \"amount\" : 200.0,\n   \"purchaseDate\" : \"2025-06-10T18:50:00\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/purchases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"purchases"
									]
								}
							},
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un purchase 1 a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/{{purchase_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"purchases",
								"{{purchase_id_1}}"
							]
						},
						"description": "Asocia el purchase 1 (ya creado) al assistant"
					},
					"response": [
						{
							"name": "Agregar un purchase 1 a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"remainingSeats\" : 111,\r\n   \"amount\" : 100.0,\r\n   \"purchaseDate\" : \"2025-06-10T18:40:00\",\r\n   \"assistant\": [\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Asociacion assistant purchase 1\",\r\n        \"lastName\": \"Asistente\",\r\n        \"email\": \"Asociacionassistantpurchase1@example.com\",\r\n        \"password\": \"nuevapassword\",\r\n        \"numberPhone\": \"34234565\",\r\n        \"birthDate\": \"1995-03-20\"\r\n    }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/{{purchase_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"purchases",
										"{{purchase_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un purchase 2 a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/{{purchase_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"purchases",
								"{{purchase_id_2}}"
							]
						},
						"description": "Asocia el purchase 2 al assistant"
					},
					"response": [
						{
							"name": "Agregar un purchase 2 a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 2,\r\n   \"remainingSeats\" : 222,\r\n   \"amount\" : 150.0,\r\n   \"purchaseDate\" : \"2025-06-10T18:45:00\",\r\n   \"assistant\": [\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Asociacion assistant purchase 1\",\r\n        \"lastName\": \"Asistente\",\r\n        \"email\": \"Asociacionassistantpurchase1@example.com\",\r\n        \"password\": \"nuevapassword\",\r\n        \"numberPhone\": \"34234565\",\r\n        \"birthDate\": \"1995-03-20\"\r\n    }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/{{purchase_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"purchases",
										"{{purchase_id_2}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un purchase que no existe a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.apierror.message).to.eql(\"The purchase with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"purchases",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un purchase que no existe a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"timestamp\": \"21-02-2023 10:15:29\",\r\n\r\n        \"message\": \"The purchase with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"purchases",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener purchases de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of purchases > 0', function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.length).to.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"purchases"
							]
						},
						"description": "Obtiene todas las purchases asociadas a un assistant"
					},
					"response": [
						{
							"name": "Obtener purchases de un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"purchases"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener una purchase específica de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/{{purchase_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"purchases",
								"{{purchase_id_1}}"
							]
						},
						"description": "Obtiene una purchase específica asociada a un assistant"
					},
					"response": [
						{
							"name": "Obtener una purchase específica de un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/{{purchase_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"purchases",
										"{{purchase_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener una purchase específica que no existe de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.apierror.message).to.eql(\"The purchase with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"purchases",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una purchase específica que no existe de un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"purchases",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener una purchase que no esta asociada a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"",
									"   pm.response.to.have.status(412);",
									"",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"",
									"   var data = pm.response.json();",
									"",
									"   pm.expect(data.apierror.message).to.eql(\"The purchase is not associated to the assistant\");",
									"",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/{{purchase_id_3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"purchases",
								"{{purchase_id_3}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una purchase que no esta asociada a un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/{{purchase_id_3}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"purchases",
										"{{purchase_id_3}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Borrar un purchase de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/{{purchase_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"purchases",
								"{{purchase_id_2}}"
							]
						},
						"description": "Elimina la relación entre un assistant y una purchase"
					},
					"response": []
				},
				{
					"name": "Borrar un purchase a un assistant que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.apierror.message).to.eql(\"The assistant with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/0/purchases/{{purchase_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"0",
								"purchases",
								"{{purchase_id_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Borrar un purchase que no existe de un assistant",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"purchases",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Borrar una purchase que no existe de un assistant",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"message\": \"The purchase with the given id was not found\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/purchases/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"purchases",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Operaciones para la relacion entre assistant y pruchase"
		},
		{
			"name": "AssistantMethodService",
			"item": [
				{
					"name": "Crear un nuevo asistente Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"assistant_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Asociacion assistant payment 1\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"Asociacionassistantpayment1@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/assistants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants"
							]
						},
						"description": "Crea un nuevo registro de asistente en el sistema"
					},
					"response": [
						{
							"name": "Crear un nuevo asistente",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"name\": \"Asociacion assistant payment 1\",\n  \"lastName\": \"Asistente\",\n  \"email\": \"Asociacionassistantpayment1@example.com\",\n  \"password\": \"nuevapassword\",\n  \"numberPhone\": \"34234565\",\n  \"birthDate\": \"1995-03-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Create Mobile Wallet 1 Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"mobile_wallet_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\":\"MOBILE_WALLET\",\r\n    \"phoneAccount\": 11111,\r\n    \"typeOfWallet\": \"Nequi\",\r\n    \"otpCode\": 456,\r\n    \"identityDocument\": 100293846,\r\n    \"email\": \"user@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mobileWallets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mobileWallets"
							]
						}
					},
					"response": [
						{
							"name": "Create Mobile Wallet",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"type\":\"MOBILE_WALLET\",\r\n    \"phoneAccount\": 11111,\r\n    \"typeOfWallet\": \"Nequi\",\r\n    \"otpCode\": 456,\r\n    \"identityDocument\": 100293846,\r\n    \"email\": \"user@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mobileWallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mobileWallets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"phoneAccount\": 1234567890,\r\n    \"typeOfWallet\": \"Nequi\",\r\n    \"otpCode\": 456,\r\n    \"identityDocument\": 100293846,\r\n    \"email\": \"user@gmail.com\"\r\n}"
						}
					]
				},
				{
					"name": "Create Mobile Wallet 2 Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"mobile_wallet_id_2\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\":\"MOBILE_WALLET\",\r\n    \"phoneAccount\": 222222,\r\n    \"typeOfWallet\": \"Nequi\",\r\n    \"otpCode\": 456,\r\n    \"identityDocument\": 100293846,\r\n    \"email\": \"user@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mobileWallets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mobileWallets"
							]
						}
					},
					"response": [
						{
							"name": "Create Mobile Wallet",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"type\":\"MOBILE_WALLET\",\r\n    \"phoneAccount\": 222222,\r\n    \"typeOfWallet\": \"Nequi\",\r\n    \"otpCode\": 456,\r\n    \"identityDocument\": 100293846,\r\n    \"email\": \"user@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mobileWallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mobileWallets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"phoneAccount\": 1234567890,\r\n    \"typeOfWallet\": \"Nequi\",\r\n    \"otpCode\": 456,\r\n    \"identityDocument\": 100293846,\r\n    \"email\": \"user@gmail.com\"\r\n}"
						}
					]
				},
				{
					"name": "Create Mobile Wallet 3 sin Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"mobile_wallet_id_3\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\":\"MOBILE_WALLET\",\r\n    \"phoneAccount\": 333333,\r\n    \"typeOfWallet\": \"Nequi\",\r\n    \"otpCode\": 456,\r\n    \"identityDocument\": 100293846,\r\n    \"email\": \"user@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mobileWallets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mobileWallets"
							]
						}
					},
					"response": [
						{
							"name": "Create Mobile Wallet",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 3,\r\n    \"type\":\"MOBILE_WALLET\",\r\n    \"phoneAccount\": 333333,\r\n    \"typeOfWallet\": \"Nequi\",\r\n    \"otpCode\": 456,\r\n    \"identityDocument\": 100293846,\r\n    \"email\": \"user@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mobileWallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mobileWallets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"phoneAccount\": 1234567890,\r\n    \"typeOfWallet\": \"Nequi\",\r\n    \"otpCode\": 456,\r\n    \"identityDocument\": 100293846,\r\n    \"email\": \"user@gmail.com\"\r\n}"
						}
					]
				},
				{
					"name": "Agregar un mobillewallet a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{mobile_wallet_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{mobile_wallet_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un mobillewallet a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"type\": \"Mobillewallet\",\r\n    \"assistant\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Asociacion assistant payment 1\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"Asociacionassistantpayment1@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{mobile_wallet_id_1}}/payments/{{mobile_wallet_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{mobile_wallet_id_1}}",
										"payments",
										"{{mobile_wallet_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un mobillewallet 2 a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{mobile_wallet_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{mobile_wallet_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un mobillewallet a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 2,\r\n    \"type\": \"Mobillewallet\",\r\n    \"assistant\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Asociacion assistant payment 1\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"Asociacionassistantpayment1@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{mobile_wallet_id_1}}/payments/{{mobile_wallet_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{mobile_wallet_id_1}}",
										"payments",
										"{{mobile_wallet_id_2}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Create Credit Card 1 Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"credit_card_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"CREDIT_CARD\",\r\n    \"cardNumber\": 1111111,\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": 111,\r\n    \"expirationDate\":\"2026-08-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/credit_cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credit_cards"
							]
						}
					},
					"response": [
						{
							"name": "Create credit card",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cardNumber\": \"1234567890\",\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": \"456\",\r\n    \"expirationDate\": \"2026-08-01\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/credit_cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"credit_cards"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"type\": \"CREDIT_CARD\",\r\n    \"cardNumber\": 123456789,\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": 456,\r\n    \"expirationDate\":\"2026-08-01\"\r\n}"
						}
					]
				},
				{
					"name": "Create Credit Card 2 Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"credit_card_id_2\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"CREDIT_CARD\",\r\n    \"cardNumber\": 2222222,\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": 222,\r\n    \"expirationDate\":\"2026-08-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/credit_cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credit_cards"
							]
						}
					},
					"response": [
						{
							"name": "Create credit card",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cardNumber\": \"1234567890\",\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": \"456\",\r\n    \"expirationDate\": \"2026-08-01\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/credit_cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"credit_cards"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"type\": \"CREDIT_CARD\",\r\n    \"cardNumber\": 123456789,\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": 456,\r\n    \"expirationDate\":\"2026-08-01\"\r\n}"
						}
					]
				},
				{
					"name": "Create Credit Card 3 sin Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"credit_card_id_3\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"CREDIT_CARD\",\r\n    \"cardNumber\": 333333,\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": 333,\r\n    \"expirationDate\":\"2026-08-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/credit_cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credit_cards"
							]
						}
					},
					"response": [
						{
							"name": "Create credit card",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cardNumber\": \"1234567890\",\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": \"456\",\r\n    \"expirationDate\": \"2026-08-01\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/credit_cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"credit_cards"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"type\": \"CREDIT_CARD\",\r\n    \"cardNumber\": 123456789,\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": 456,\r\n    \"expirationDate\":\"2026-08-01\"\r\n}"
						}
					]
				},
				{
					"name": "Agregar un creditcard a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{credit_card_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{credit_card_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un mobillewallet a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"type\": \"Mobillewallet\",\r\n    \"assistant\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Asociacion assistant payment 1\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"Asociacionassistantpayment1@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{mobile_wallet_id_1}}/payments/{{mobile_wallet_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{mobile_wallet_id_1}}",
										"payments",
										"{{mobile_wallet_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un creditcard 2 a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{credit_card_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{credit_card_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un mobillewallet a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"type\": \"Mobillewallet\",\r\n    \"assistant\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Asociacion assistant payment 1\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"Asociacionassistantpayment1@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{mobile_wallet_id_1}}/payments/{{mobile_wallet_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{mobile_wallet_id_1}}",
										"payments",
										"{{mobile_wallet_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Create Debit Card 1 Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"debit_card_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\":\"DEBIT_CARD\",\r\n    \"cardNumber\": 11111,\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": 111\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/debit_cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"debit_cards"
							]
						}
					},
					"response": [
						{
							"name": "Create debit card",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/debit-cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"debit-cards"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"cardNumber\": 1234567890,\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": 456\r\n}"
						}
					]
				},
				{
					"name": "Create Debit Card 2 Asociacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"\r",
									"pm.globals.set(\"debit_card_id_2\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"   pm.response.to.have.status(201);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\":\"DEBIT_CARD\",\r\n    \"cardNumber\": 22222,\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": 222\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/debit_cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"debit_cards"
							]
						}
					},
					"response": [
						{
							"name": "Create debit card",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/debit-cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"debit-cards"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"cardNumber\": 1234567890,\r\n    \"cardHolderName\": \"Juan Perez\",\r\n    \"securityCode\": 456\r\n}"
						}
					]
				},
				{
					"name": "Agregar un debitcard 1 a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{debit_card_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{debit_card_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un mobillewallet a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"type\": \"Mobillewallet\",\r\n    \"assistant\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Asociacion assistant payment 1\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"Asociacionassistantpayment1@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{mobile_wallet_id_1}}/payments/{{mobile_wallet_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{mobile_wallet_id_1}}",
										"payments",
										"{{mobile_wallet_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un debitcard 2 a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"   pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{debit_card_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{debit_card_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un mobillewallet a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"type\": \"Mobillewallet\",\r\n    \"assistant\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Asociacion assistant payment 1\",\r\n            \"lastName\": \"Asistente\",\r\n            \"email\": \"Asociacionassistantpayment1@example.com\",\r\n            \"password\": \"nuevapassword\",\r\n            \"numberPhone\": \"34234565\",\r\n            \"birthDate\": \"1995-03-20\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{mobile_wallet_id_1}}/payments/{{mobile_wallet_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{mobile_wallet_id_1}}",
										"payments",
										"{{mobile_wallet_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un payment que no existe a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.apierror.message).to.eql(\"The method of payment with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un purchase que no existe a un assistant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"apierror\": {\r\n\r\n        \"status\": \"NOT_FOUND\",\r\n\r\n        \"timestamp\": \"21-02-2023 10:15:29\",\r\n\r\n        \"message\": \"The method of payment with the given id was not found\"\r\n\r\n    }\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"payments",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener payments de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of method of payments > 0', function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.length).to.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments"
							]
						},
						"description": "Obtiene todas las purchases asociadas a un assistant"
					},
					"response": [
						{
							"name": "Obtener payments de un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"payments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener una payment específica de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{mobile_wallet_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{mobile_wallet_id_1}}"
							]
						},
						"description": "Obtiene una purchase específica asociada a un assistant"
					},
					"response": [
						{
							"name": "Obtener una purchase específica de un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{mobile_wallet_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"payments",
										"{{mobile_wallet_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un payment específica que no existe de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.apierror.message).to.eql(\"The method of payment with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un payment específica que no existe de un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"payments",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un payment que no esta asociada a un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"",
									"   pm.response.to.have.status(412);",
									"",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"",
									"   var data = pm.response.json();",
									"",
									"   pm.expect(data.apierror.message).to.eql(\"The method of payment is not associated to the assistant\");",
									"",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{mobile_wallet_id_3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{mobile_wallet_id_3}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un payment que no esta asociada a un assistant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{mobile_wallet_id_3}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"payments",
										"{{mobile_wallet_id_3}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Borrar un MobileWallet 2 de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{mobile_wallet_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{mobile_wallet_id_2}}"
							]
						},
						"description": "Elimina la relación entre un assistant y una purchase"
					},
					"response": [
						{
							"name": "Borrar un MobileWallet 2 de un assistant",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{mobile_wallet_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"payments",
										"{{mobile_wallet_id_2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un CreditCard 2 de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{credit_card_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{credit_card_id_2}}"
							]
						},
						"description": "Elimina la relación entre un assistant y una purchase"
					},
					"response": [
						{
							"name": "Borrar un CreditCard 2 de un assistant",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{credit_card_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"payments",
										"{{credit_card_id_2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un DebitCard 1 de un assistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{debit_card_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"{{debit_card_id_1}}"
							]
						},
						"description": "Elimina la relación entre un assistant y una purchase"
					},
					"response": [
						{
							"name": "Borrar un DebitCard 1 de un assistant",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/{{debit_card_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"payments",
										"{{debit_card_id_1}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un payment a un assistant que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.apierror.message).to.eql(\"The assistant with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/0/payments/{{mobile_wallet_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"0",
								"payments",
								"{{mobile_wallet_id_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Borrar un payment que no existe de un assistant",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"payments",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "Borrar una payment que no existe de un assistant",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"message\": \"The method of payment with the given id was not found\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assistants/{{assistant_id}}/payments/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assistants",
										"{{assistant_id}}",
										"payments",
										"0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Obtener un booking que no esta asociada a un asistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"\r",
							"   pm.response.to.have.status(412);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"\r",
							"   var data = pm.response.json();\r",
							"\r",
							"   pm.expect(data.apierror.message).to.eql(\"The booking is not associated to the assistant\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_3}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"assistants",
						"{{assistant_id}}",
						"bookings",
						"{{booking_id_3}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un booking que no esta asociada a un asistente",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assistants/{{assistant_id}}/bookings/{{booking_id_3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assistants",
								"{{assistant_id}}",
								"bookings",
								"{{booking_id_3}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		}
	]
}